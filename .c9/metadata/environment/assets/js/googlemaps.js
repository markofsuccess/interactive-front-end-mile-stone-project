{"filter":false,"title":"googlemaps.js","tooltip":"/assets/js/googlemaps.js","undoManager":{"mark":3,"position":3,"stack":[[{"start":{"row":0,"column":0},"end":{"row":65,"column":7},"action":"insert","lines":["unction initAutocomplete() {","        var map = new google.maps.Map(document.getElementById('map'), {","          center: {lat: -33.8688, lng: 151.2195},","          zoom: 13,","          mapTypeId: 'roadmap'","        });","","        // Create the search box and link it to the UI element.","        var input = document.getElementById('pac-input');","        var searchBox = new google.maps.places.SearchBox(input);","        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);","","        // Bias the SearchBox results towards current map's viewport.","        map.addListener('bounds_changed', function() {","          searchBox.setBounds(map.getBounds());","        });","","        var markers = [];","        // Listen for the event fired when the user selects a prediction and retrieve","        // more details for that place.","        searchBox.addListener('places_changed', function() {","          var places = searchBox.getPlaces();","","          if (places.length == 0) {","            return;","          }","","          // Clear out the old markers.","          markers.forEach(function(marker) {","            marker.setMap(null);","          });","          markers = [];","","          // For each place, get the icon, name and location.","          var bounds = new google.maps.LatLngBounds();","          places.forEach(function(place) {","            if (!place.geometry) {","              console.log(\"Returned place contains no geometry\");","              return;","            }","            var icon = {","              url: place.icon,","              size: new google.maps.Size(71, 71),","              origin: new google.maps.Point(0, 0),","              anchor: new google.maps.Point(17, 34),","              scaledSize: new google.maps.Size(25, 25)","            };","","            // Create a marker for each place.","            markers.push(new google.maps.Marker({","              map: map,","              icon: icon,","              title: place.name,","              position: place.geometry.location","            }));","","            if (place.geometry.viewport) {","              // Only geocodes have viewport.","              bounds.union(place.geometry.viewport);","            } else {","              bounds.extend(place.geometry.location);","            }","          });","          map.fitBounds(bounds);","        });","      }"],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["f"],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":65,"column":7},"action":"remove","lines":["function initAutocomplete() {","        var map = new google.maps.Map(document.getElementById('map'), {","          center: {lat: -33.8688, lng: 151.2195},","          zoom: 13,","          mapTypeId: 'roadmap'","        });","","        // Create the search box and link it to the UI element.","        var input = document.getElementById('pac-input');","        var searchBox = new google.maps.places.SearchBox(input);","        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);","","        // Bias the SearchBox results towards current map's viewport.","        map.addListener('bounds_changed', function() {","          searchBox.setBounds(map.getBounds());","        });","","        var markers = [];","        // Listen for the event fired when the user selects a prediction and retrieve","        // more details for that place.","        searchBox.addListener('places_changed', function() {","          var places = searchBox.getPlaces();","","          if (places.length == 0) {","            return;","          }","","          // Clear out the old markers.","          markers.forEach(function(marker) {","            marker.setMap(null);","          });","          markers = [];","","          // For each place, get the icon, name and location.","          var bounds = new google.maps.LatLngBounds();","          places.forEach(function(place) {","            if (!place.geometry) {","              console.log(\"Returned place contains no geometry\");","              return;","            }","            var icon = {","              url: place.icon,","              size: new google.maps.Size(71, 71),","              origin: new google.maps.Point(0, 0),","              anchor: new google.maps.Point(17, 34),","              scaledSize: new google.maps.Size(25, 25)","            };","","            // Create a marker for each place.","            markers.push(new google.maps.Marker({","              map: map,","              icon: icon,","              title: place.name,","              position: place.geometry.location","            }));","","            if (place.geometry.viewport) {","              // Only geocodes have viewport.","              bounds.union(place.geometry.viewport);","            } else {","              bounds.extend(place.geometry.location);","            }","          });","          map.fitBounds(bounds);","        });","      }"],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":68,"column":1},"action":"insert","lines":["function initAutocomplete() {","    var map = new google.maps.Map(document.getElementById('map'), {","        center: {","            lat: -33.8688,","            lng: 151.2195","        },","        zoom: 13,","        mapTypeId: 'roadmap'","    });","","    // Create the search box and link it to the UI element.","    var input = document.getElementById('pac-input');","    var searchBox = new google.maps.places.SearchBox(input);","    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);","","    // Bias the SearchBox results towards current map's viewport.","    map.addListener('bounds_changed', function() {","        searchBox.setBounds(map.getBounds());","    });","","    var markers = [];","    // Listen for the event fired when the user selects a prediction and retrieve","    // more details for that place.","    searchBox.addListener('places_changed', function() {","        var places = searchBox.getPlaces();","","        if (places.length == 0) {","            return;","        }","","        // Clear out the old markers.","        markers.forEach(function(marker) {","            marker.setMap(null);","        });","        markers = [];","","        // For each place, get the icon, name and location.","        var bounds = new google.maps.LatLngBounds();","        places.forEach(function(place) {","            if (!place.geometry) {","                console.log(\"Returned place contains no geometry\");","                return;","            }","            var icon = {","                url: place.icon,","                size: new google.maps.Size(71, 71),","                origin: new google.maps.Point(0, 0),","                anchor: new google.maps.Point(17, 34),","                scaledSize: new google.maps.Size(25, 25)","            };","","            // Create a marker for each place.","            markers.push(new google.maps.Marker({","                map: map,","                icon: icon,","                title: place.name,","                position: place.geometry.location","            }));","","            if (place.geometry.viewport) {","                // Only geocodes have viewport.","                bounds.union(place.geometry.viewport);","            } else {","                bounds.extend(place.geometry.location);","            }","        });","        map.fitBounds(bounds);","    });","}"],"id":4}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":68,"column":1},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":54,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1561534651422,"hash":"3e3136174e00a537e26f159aa7c6f2dafa9f2e2d"}